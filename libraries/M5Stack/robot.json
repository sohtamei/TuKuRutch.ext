{
	"name"			: "M5Stack",
	"port"			: 0,										// 変更禁止
	"boardType"		: "esp32:esp32:esp32",						// package:platform:board

	"sort"			: 12,										// メニュー上の表示順序
	"extensionAuthor": "sohtamei",								// この拡張スクリプトの作者
	"helpURL"		: "https://github.com/sohtamei/docs/blob/master/M5.md",
	"productInfoURL": "https://github.com/sohtamei/docs/blob/master/M5.md",
	"sampleDir"		: "sample/M5Series",						// サンプルディレクトリ
	"javascriptURL"	: "robot.js",
	"normalFW"		: "",										// 最初のプログラム,  .ino, .cpp.standard.hex
	"pcmodeFW"		: "robot_pcmode/robot_pcmode",				// PC modeプログラム, .ino, .cpp.standard.hex, .ino.template
	"prefs"			: ["custom_CPUFreq=esp32_240",
						"custom_DebugLevel=esp32_none",
						"custom_FlashFreq=esp32_80",
						"custom_FlashMode=esp32_qio",
						"custom_FlashSize=esp32_4M",
						"custom_PSRAM=esp32_disabled",
						"custom_PartitionScheme=esp32_default",
						"custom_UploadSpeed=esp32_921600"],

	// C言語記述注意 : " を使うときは \" とすること

	// PCモード/書き込みモード ヘッダ (C言語)
	"header":"
#define mVersion \"M5STACK 1.0\"

#define M5STACK_MPU6886 
// #define M5STACK_MPU9250 
#include <M5Stack.h>
#include \"TukurutchEsp.h\"


WebsocketsServer wsServer;

#define numof(a) (sizeof(a)/sizeof((a)[0]))

void _setLED(uint8_t onoff)
{;}

uint8_t _getSw(uint8_t button)
{
  switch(button) {
  case 0: return M5.BtnA.isPressed();
  case 1: return M5.BtnB.isPressed();
  case 2: return M5.BtnC.isPressed();
  }
  return 0;
}

float getIMU(uint8_t index)
{
  float data[3] = {0};
  if(index < 3) {
    M5.IMU.getGyroData(data+0,data+1,data+2);
    return data[index-0];
  } else if(index < 6) {
    M5.IMU.getAccelData(data+0,data+1,data+2);
    return data[index-3];
  } else if(index < 9) {
    //M5.IMU.getAhrsData(data+0,data+1,data+2);
    return data[index-6];
  } else {
    M5.IMU.getTempData(data+0);
    return data[0];
  }
}

void _tone(int sound, int ms)
{
  M5.Speaker.tone(sound, ms);
  delay(ms);
  M5.Speaker.mute();
}

void _beep(void)
{
  M5.Speaker.beep();
  delay(100);
  M5.Speaker.mute();
}

void onConnect(String ip)
{
  M5.Lcd.fillScreen(BLACK);
  M5.Lcd.setCursor(0,0);
  M5.Lcd.println(ip);
  wsServer.listen(PORT_WEBSOCKET);
}
",
	// PCモード/書き込みモード setup処理 (C言語)
	"setup":"
M5.begin(true, true, true); // init lcd, sd card, serial
M5.Power.begin();    // use battery
M5.IMU.Init();

M5.Lcd.fillScreen(BLACK);
M5.Lcd.setTextSize(2);

M5.Lcd.setCursor(0, 0);
if(_getSw(0)) {
  M5.Lcd.println(\"ESP SmartConfig\");
  WiFi.mode(WIFI_STA);
  WiFi.beginSmartConfig();
  while (!WiFi.smartConfigDone()) {
    delay(2000);
    _setLED(1);
    _tone(T_C5, 100);
    _setLED(0);
  }
} else {
  #ifdef PCMODE
    M5.Lcd.println(\"PC mode: \" mVersion);
  #else
    M5.Lcd.println(\"Arduino mode: \" mVersion);
  #endif
}

Serial.begin(115200);
#ifndef PCMODE
initWifi(mVersion, true, onConnect);
#else
initWifi(mVersion, false, onConnect);
#endif
",
	// PCモード/書き込みモード loop処理 (C言語)
	"loop":"
  loopWebSocket();
#ifndef PCMODE
  sendNotifyArduinoMode();
#endif
  M5.update();  // update button and speaker
//delay(50);
",

	// PCモード/書き込みモード スクラッチブロック定義
	"blockSpecs": [
	// type			: w-実行関数, R-取得関数, B-true/false取得, h-プログラム開始
	// Block定義	: パラメータ %n-数値, %d-数値+enum, %s-文字列, %m-文字列+enum
	// remote		: 通常関数, 引数+戻値 型定義 B-int8, S-int16, L-int32, F-float, D-double, s-string, b-byteArray
	// custom		: 特殊関数, robot.js呼び出し(ext.Block名). PCモードと書き込みモードで処理を分けるとき使用。
	// enum			: enum値取得
	// 実行/取得関数: 引数 {0},{1}, 関数の区切り＝wブロック';', R/Bブロック','  (C言語)

	//  type | Block定義                               | Block名           | 初期値     |remote/custom/enum    | 実行/取得関数
	//-------+-----------------------------------------+-------------------+------------+----------------------+----------------------------------
		["h", "Program Start",							"runArduino",					{}],	// 変更禁止

		["-"],	// ブロック区切り

		["w", "set LED %d.onoff",						"setLED",			"On",		{"remote":["B"],		"func":"_setLED({0});"}],
		["R", "get IMU %d.imu",							"getIMU",			"AccelX",	{"remote":["B","F"],	"func":"getIMU({0})"}],
		["w", "play tone on note %d.note beat %d.beats","Buzzer",	 	 "C4","Half",	{"remote":["S","S"],	"func":"_tone({0},{1});"}],
		["w", "Beep",									"Beep",							{"remote":[],			"func":"_beep();"}],
		["B", "%d.button is pressed",					"getSw",			"buttonA",	{"remote":["B","B"],	"func":"_getSw({0})"}],
		["w", "set digital pin %n output as %d.digital","setDigital",		26,"HIGH",	{"remote":["B","B"],	"func":"pinMode({0},OUTPUT);digitalWrite({0},{1});"}],
		["B", "read digital pin %n",					"getDigital",		26,			{"remote":["B",		"B"], "func":"pinMode({0},INPUT),digitalRead({0})"}],
		["R", "read analog pin %n average %n times",	"getAnalog",		36,4,		{"remote":["B","S",	"S"], "func":"getAdc1({0},{1})"}],

		["-"],

		["w", "set text %d.color size=%n",				"setText",			"WHITE", 2,	{"remote":["S","B"],	"func":"M5.Lcd.setTextColor({0});M5.Lcd.setTextSize({1});"}],
		["w", "set cursor at (%n ,%n )",				"setCursor",		0,0,		{"remote":["S","S"],	"func":"M5.Lcd.setCursor({0},{1});"}],
		["w", "print text %s",							"printText",		"test",		{"remote":["s"],		"func":"M5.Lcd.print({0});"}],
		["w", "print text %s and return",				"printlnText",		"test",		{"remote":["s"],		"func":"M5.Lcd.println({0});"}],
		["w", "draw text %s (%n ,%n ) font=%d.font",	"drawString","test",0,0,"Ascii16",{"remote":["s","S","S","B"],"func":"M5.Lcd.drawString({0},{1},{2},{3});"}],
		["w", "fill screen with %d.color",				"fillScreen",		"BLACK",	{"remote":["S"],		"func":"M5.Lcd.fillScreen({0}); M5.Lcd.setCursor(0,0);"}],

		["-"],

		["-"],//["w", "--- ServoCar ---",						"tagServo",						{"enum":"",					"func":"0"}],
		["-"],//["w", "%d.direction at speed %n",				"setCar",  "run forward",100,	{"remote":["B","B"],	"func":"_setCar({0},{1});"}],
		["-"],//["w", "set motor %d.servoch speed %d.speed",	"setMotor",			0,100,		{"remote":["B","S"],	"func":"_setServo({0},{1},1);"}],
		["-"],//["w", "stop",									"stopCar",						{"remote":[],			"func":"_setCar(0,0);"}],
		["-"],//["R", "%d.direction .",							"enumDirection",  "run forward",{"enum":"",				"func":"{0}"}],
		["-"],//["w", "set servo %d.servoch %d.angle",			"setServo",			0,90,		{"remote":["B","B"],	"func":"_setServo({0},{1},0);"}],
	//	["w", "stop servo %d.servoch",					"stopServo",		0,			{"remote":["B"],		"func":"_setServo({0},0,1);"}],

		["-"],

		["-"],//["w", "--- RoverC ---",							"tagRover",						{"enum":"",					"func":"0"}],
		["-"],//["w", "FL %n FR %n RL %n RR %n",				"setRoverC",	0,0,0,0,		{"remote":["S","S","S","S"],"func":"setRoverC({0},{1},{2},{3});"}],
		["-"],//["w", "x %n y %n role %n",						"setRoverC_XYR",0,0,0,			{"remote":["S","S","S"],	"func":"setRoverC_XYR({0},{1},{2});"}],
		["-"],//["w", "dir %d.roverDir speed %n",				"moveRoverC",	"UP",100,		{"remote":["B","B"],		"func":"moveRoverC({0},{1});"}],
		["-"],//["R", "%d.roverDir .",							"enumRoverDir","UP",			{"enum":"",					"func":"{0}"}],

		["-"],

		// WiFi設定
		["R", "status WIFI",							"statusWifi",					{"remote":[			"s"],"func":"statusWifi()"}],
		["R", "scan WIFI",								"scanWifi",						{"remote":[			"s"],"func":"scanWifi()"}],
		["R", "connect WIFI %s %s",						"connectWifi","ssid","pass",	{"remote":["s","s",	"B"],"func":"connectWifi({0},{1})"}],
	],
	"menus": {
		"digital":["HIGH","LOW"],
		"onoff":["On","Off"],
		"button":["buttonA","buttonB","buttonC"],
		"color":["BLACK","NAVY","DARKGREEN","DARKCYAN","MAROON","PURPLE","OLIVE","LIGHTGREY","DARKGREY","BLUE","GREEN","CYAN","RED","MAGENTA","YELLOW","WHITE","ORANGE","GREENYELLOW","PINK"],
		"imu":["GyroX","GyroY","GyroZ","AccelX","AccelY","AccelZ","Pitch","Roll","Yaw","Temp"],

		"font":["Ascii8","Ascii16","Ascii26","Num48","7Seg48","Num75"],

		"note":["C2","D2","E2","F2","G2","A2","B2","C3","D3","E3","F3","G3","A3","B3",
				"C4","D4","E4","F4","G4","A4","B4","C5","D5","E5","F5","G5","A5","B5",
				"C6","D6","E6","F6","G6","A6","B6","C7","D7","E7","F7","G7","A7","B7","C8","D8"],
		"beats":["Half","Quarter","Eighth","Whole","Double"],
	},
	"values":{
		"HIGH":1,"LOW":0,
		"On":1,"Off":0,
		"buttonA":0,"buttonB":1,"buttonC":2,
		"BLACK":0x0000,"NAVY":0x000F,"DARKGREEN":0x03E0,"DARKCYAN":0x03EF,"MAROON":0x7800,"PURPLE":0x780F,"OLIVE":0x7BE0,"LIGHTGREY":0xC618,"DARKGREY":0x7BEF,"BLUE":0x001F,"GREEN":0x07E0,"CYAN":0x07FF,"RED":0xF800,"MAGENTA":0xF81F,"YELLOW":0xFFE0,"WHITE":0xFFFF,"ORANGE":0xFD20,"GREENYELLOW":0xAFE5,"PINK":0xF81F,
		"GyroX":0,"GyroY":1,"GyroZ":2,"AccelX":3,"AccelY":4,"AccelZ":5,"Pitch":6,"Roll":7,"Yaw":8,"Temp":9,

		"Ascii8":1,"Ascii16":2,"Ascii26":4,"Num48":6,"7Seg48":7,"Num75":8,

		"C2":65,"D2":73,"E2":82,"F2":87,"G2":98,"A2":110,"B2":123,
		"C3":131,"D3":147,"E3":165,"F3":175,"G3":196,"A3":220,"B3":247,
		"C4":262,"D4":294,"E4":330,"F4":349,"G4":392,"A4":440,"B4":494,
		"C5":523,"D5":587,"E5":659,"F5":698,"G5":784,"A5":880,"B5":988,
		"C6":1047,"D6":1175,"E6":1319,"F6":1397,"G6":1568,"A6":1760,"B6":1976,
		"C7":2093,"D7":2349,"E7":2637,"F7":2794,"G7":3136,"A7":3520,"B7":3951,
		"C8":4186,"D8":4699,

		"Half":500,"Quarter":250,"Eighth":125,"Whole":1000,"Double":2000,"Zero":0,
	},
	"translators":{
		"ja":{
			"set digital pin %n output as %d.digital"		:"デジタルピン %n の出力を %d.digital にする",
			"read digital pin %n"							:"デジタルピン %n",
			"read analog pin %n average %n times"			:"アナログピン %n の %n 回平均",
		}
	}
}
