{
	"name"			: "esp32s3ucam",							// マイコン拡張定義	
	"boardType"		: "esp32:esp32:esp32s3",						// package:platform:board
	"prefs"			: ["custom_CDCOnBoot=esp32s3_cdc",
						"custom_CPUFreq=esp32s3_240",
						"custom_DFUOnBoot=esp32s3_default",
						"custom_DebugLevel=esp32s3_none",
						"custom_EventsCore=esp32s3_1",
						"custom_FlashMode=esp32s3_qio",
						"custom_FlashSize=esp32s3_4M",
						"custom_LoopCore=esp32s3_1",
						"custom_MSCOnBoot=esp32s3_default",
						"custom_PSRAM=esp32s3_disabled",
						"custom_PartitionScheme=esp32s3_huge_app",
						"custom_USBMode=esp32s3_default",
						"custom_UploadMode=esp32s3_cdc",
						"custom_UploadSpeed=esp32s3_921600"],

	// C言語記述注意 : " を使うときは \" とすること

	// ヘッダ (C言語)
	"header":"
#define mVersion \"esp32s3ucam1.0\"

#include <TukurutchEsp.h>
#include \"main.h\"
#include <TukurutchEspCamera.h>
",
	// setup処理 (C言語)
	"setup":"_setup(mVersion);",

	// loop処理 (C言語)
	"loop":"
  loopWebSocket();
  _loop();
",

	// スクラッチブロック定義
	"blockSpecs": [
	// type			: w-実行関数, R-取得関数, B-true/false取得, h-プログラム開始
	// Block定義	: パラメータ %n-数値, %d-数値+enum, %s-文字列, %m-文字列+enum
	// remote		: 通常関数, 引数+戻値 型定義 B-int8, S-int16, L-int32, F-float, D-double, s-string, b-byteArray
	// custom		: 特殊関数, robot.js呼び出し(ext.Block名). PCモードと書き込みモードで処理を分けるとき使用。
	// enum			: enum値取得
	// 実行/取得関数: 引数 {0},{1}, 関数の区切り＝wブロック';', R/Bブロック','  (C言語)

	//  type | Block定義                               | Block名           | 初期値     |remote/custom/enum    | 実行/取得関数
	//-------+-----------------------------------------+-------------------+------------+----------------------+----------------------------------
		["-"],					// dummy
		["-"],
		["-"],
		["-"],
		["-"],
		["-"],
		["-"],
		["w", "set LED %d.onoff",						"setLED",			"On",		{"remote":["B"],		"func":"espcamera_setLED({0});"}],
	],
	"menus": {
		"onoff"		:["On","Off"],
	},
	"values":{
		"On":1,"Off":0,
	},

	"sort"			: 31,										// メニュー上の表示順序
}
