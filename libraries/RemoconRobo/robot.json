{
	"name"			: "RemoconRobo",
	"scratch3ext"	: "RemoconRobo",							// scratch3 ext名[,SupportCamera]
	"boardType"		: "arduino:avr:uno",						// package:platform:board

	"sort"			: 50,										// メニュー上の表示順序
	"sampleDir"		: "sample/RemoconRobo",						// サンプルディレクトリ
	"normalFW"		: "robot_normal/robot_normal",				// 最初のプログラム,  .ino, .cpp.standard.hex (option)
	"pcmodeFW"		: "robot_pcmode/robot_pcmode",				// PC modeプログラム, .ino, .cpp.standard.hex, .ino.template
	"libraryPath"	: "remoconRoboLib",							// 専用ライブラリ(option)

	"scratch3burn"	: [											// binary定義
			{"name":"remoconRobo", "type":"atmega328", "baudrate":115200, "binPath":"RemoconRobo"},
	],

	// C言語記述注意 : " を使うときは \" とすること

	// ヘッダ (C言語)
	"header":"
#define mVersion \"RemoconRobo1.2\"

#include <Servo.h>
#include <remoconRoboLib.h>
#include <analogRemote.h>

#define REMOTE_ENABLE	// for robot_pcmode.ino.template
void funcLed(uint8_t onoff) { digitalWrite(13, onoff); }
analogRemote remote(MODE_NORMAL, /*port*/2, funcLed);

Servo srvClass[3];          // for setServo
const uint8_t srvPin[3] = {3,9,10};

#ifdef PCMODE
static int speed = 255;
static const uint8_t SpeedTable[10] = { 48, 71, 94, 117, 140, 163, 186, 209, 232, 255};
static void beep(int sound)
{
  remoconRobo_tone(sound, 300);
}
#endif
",
	// setup処理 (C言語)
	"setup":"
Serial.begin(115200);
pinMode(13, OUTPUT);
digitalWrite(13, LOW);
remoconRobo_init();
remote.probe();
remoconRobo_tone(500, 50);
pinMode(A1, OUTPUT);
digitalWrite(A1, LOW);
",
	// loop処理 (C言語)
	"loop":"
#ifdef PCMODE
if(comMode == MODE_INVALID) {
  int updated = remote.checkUpdated();

  switch(remote.keys) {
  case BUTTON_POWER:  if(!remoconRobo_incCalib(-1)) {remoconRobo_tone(T_C4+remoconRobo_getCalib(),150);} break;
  case BUTTON_B:
  case BUTTON_MENU:  if(!remoconRobo_incCalib(+1)) {remoconRobo_tone(T_C4+remoconRobo_getCalib(),150);} break;
  }

  if(updated) {

    //char buf[64]; sprintf(buf, \"%d, %d, %d\\r\\n\", remote.keys, remote.y, remote.x); Serial.print(buf);
    if(updated == REMOTE_ANALOG)
      remoconRobo_setRobotLR(remote.y + remote.x,  // L
                 remote.y - remote.x);  // R

    switch(remote.keys) {
    case BUTTON_A_RIGHT:
    case BUTTON_TEST:  remoconRobo_setMotor(CH3,  speed); break;
    case BUTTON_A_LEFT:
    case BUTTON_RETURN:  remoconRobo_setMotor(CH3, -speed); break;

    case BUTTON_CENTER:
    case BUTTON_UP:    remoconRobo_setRobot(DIR_FORWARD, speed); break;
    case BUTTON_DOWN:  remoconRobo_setRobot(DIR_BACK,    speed); break;
  #ifdef DEF_CH4
    case BUTTON_LEFT:  remoconRobo_setRobot(DIR_ROLL_LEFT, speed); break;
    case BUTTON_RIGHT:  remoconRobo_setRobot(DIR_ROLL_RIGHT,speed); break;

    case BUTTON_A_UP:
    case BUTTON_0:    remoconRobo_setMotor(CH4,  1); break;
    case BUTTON_A_DOWN:
    case BUTTON_C:    remoconRobo_setMotor(CH4, -1); break;
  #else
    case BUTTON_LEFT:  remoconRobo_setRobot(DIR_LEFT,    speed); break;
    case BUTTON_RIGHT:  remoconRobo_setRobot(DIR_RIGHT,   speed); break;
    case BUTTON_0:    remoconRobo_setRobot(DIR_ROLL_LEFT, speed); break;
    case BUTTON_C:    remoconRobo_setRobot(DIR_ROLL_RIGHT,speed); break;
  #endif
    case BUTTON_1: beep(T_C4); speed = SpeedTable[1]; break;
    case BUTTON_2: beep(T_D4); speed = SpeedTable[2]; break;
    case BUTTON_3: beep(T_E4); speed = SpeedTable[3]; break;
    case BUTTON_4: beep(T_F4); speed = SpeedTable[4]; break;
    case BUTTON_5: beep(T_G4); speed = SpeedTable[5]; break;
    case BUTTON_6: beep(T_A4); speed = SpeedTable[6]; break;
    case BUTTON_7: beep(T_B4); speed = SpeedTable[7]; break;
    case BUTTON_8: beep(T_C5); speed = SpeedTable[8]; break;
    case BUTTON_9: beep(T_D5); speed = SpeedTable[9]; break;

    default:
      if(updated != REMOTE_ANALOG) remoconRobo_setRobotLR(0, 0);
      remoconRobo_setMotor(CH3, 0);
    #ifdef DEF_CH4
      remoconRobo_setMotor(CH4, 0);
    #endif
      break;
    }
  }
}
#endif
",

	// ブロック定義
	"blockSpecs": [
	// type			: w-実行関数, R-取得関数, B-true/false取得, h-プログラム開始
	// Block表示	: パラメータ %n-数値, %d-数値+enum, %s-文字列, %m-文字列+enum
	// remote		: 通常関数, 引数+戻値 型定義 B-int8, S-int16, L-int32, F-float, D-double, s-string, b-byteArray
	// custom		: 特殊関数, robot.js呼び出し(ext.Block名). PCモードと書き込みモードで処理を分けるとき使用。
	// enum			: enum値取得
	// 実行/取得関数: 引数 {0},{1}, 関数の区切り＝wブロック';', R/Bブロック','  (C言語)

	//  type | Block表示                               | Block名           | 初期値     |remote/custom/enum    | 実行/取得関数
	//-------+-----------------------------------------+-------------------+------------+----------------------+----------------------------------
		["h", "Program Start",							"runArduino",					{}],	// 変更禁止

		["w", "set LED %d.onoff",						"setLED",			"On",		{"remote":["B"],		"func":"pinMode(13,OUTPUT);digitalWrite(13,{0});"}],

//		["w", "play tone on note %d.noteJ1 beat %d.beats","BuzzerJ1",	  "ド2","Half",	{"remote":["S","S"],	"func":"remoconRobo_tone({0},{1});"}],
		["w", "play tone on note %d.noteJ2 beat %d.beats","BuzzerJ2",	  "ド4","Half",	{"remote":["S","S"],	"func":"remoconRobo_tone({0},{1});"}],
//		["w", "play tone on note %d.noteJ3 beat %d.beats","BuzzerJ3",	  "ド6","Half",	{"remote":["S","S"],	"func":"remoconRobo_tone({0},{1});"}],

		["R", "read analog A%n ,average %n times,discharge %d.onoff","getAnalogAve",0,1,"Off",	{"remote":["B","S","B",	"S"],"func":"remoconRobo_getAnalog(A0+{0},{1},{2})"}],

		["w", "%d.direction at speed %d.speedvalue",	"setRobot",  "run forward",255,	{"remote":["B","B"],	"func":"remoconRobo_setRobot({0},{1});"}],
		["w", "stop",									"stopRobot",					{"remote":[],			"func":"remoconRobo_setRobot(0,0);"}],
		["w", "set motor%d.motorPort speed %d.motorvalue","setMotor",		1,0,		{"remote":["B","S"],	"func":"remoconRobo_setMotor({0}-1,{1});"}],

		["w", "calibration right %n",					"incCalibRight",	1,			{"remote":["S"],		"func":"remoconRobo_incCalib({0});"}],
		["w", "calibration left %n",					"incCalibLeft", 	1,			{"remote":["S"],		"func":"remoconRobo_incCalib(-{0});"}],
		["R", "read calibration",						"getCalib",						{"remote":[			"S"],"func":"remoconRobo_getCalib()"}],
		["w", "set calibration %n",						"setCalib",			0,			{"remote":["S"],		"func":"remoconRobo_setCalib({0});"}],

		["-"],	// ブロック区切り

		// robot.js呼び出し
		["B", "remote pressed",							"checkRemoteKey",				{"custom":"", 			"func":"remote.checkRemoteKey()"}],
		["B", "ir remote %d.ircode pressed",			"isRemoteKey",		"POWER",	{"custom":"",			"func":"remote.isRemoteKey({0})"}],
		["B", "analog remote %d.ircodeA pressed",		"isARemoteKey",		"A↑",		{"custom":"",			"func":"remote.isRemoteKey({0})"}],
		["R", "get remote X",							"getRemoteX",					{"custom":"",			"func":"remote.x"}],
		["R", "get remote Y",							"getRemoteY",					{"custom":"",			"func":"remote.y"}],

		["-"],

		["w", "set digital %n output as %d.digital","setDigital",		13,"HIGH",	{"remote":["B","B"],	"func":"pinMode({0},OUTPUT);digitalWrite({0},{1});"}],
		["w", "set digital A%n output as %d.digital","setDigitalA",		0,"HIGH",	{"remote":["B","B"],	"func":"pinMode(A0+{0},OUTPUT);digitalWrite(A0+{0},{1});"}],
		["B", "read digital %n",					"getDigital",		9,			{"remote":["B",		"B"],"func":"pinMode({0},INPUT),digitalRead({0})"}],
		["B", "read digital A%n",					"getDigitalA",		0,			{"remote":["B",		"B"],"func":"pinMode(A0+{0},INPUT),digitalRead(A0+{0})"}],

		["-"],

		["w", "set servo %d.servoSlot angle %d.servovalue","setServo",		"servo3",90,{"remote":["B","B"],	"func":"if(!srvClass[{0}].attached()) srvClass[{0}].attach(srvPin[{0}]); srvClass[{0}].write({1});"}],

		// enum
		["r", "%d.noteJ2 .",							"enumNote",			"ド4",		{"enum":"",				"func":"{0}"}],
		["r", "%d.ircode .",							"enumIrcode",		"POWER",	{"enum":"",				"func":"{0}"}],
		["r", "%d.direction .",							"enumDirection", "run forward",	{"enum":"",				"func":"{0}"}],
	],
	"menus": {
		"servoSlot":["servo3","servo9","servo10"],
		"servovalue":[0,45,90,135,180],
		"motorPort":[1,2,3,4],
		"motorvalue":[255,100,50,0,-50,-100,-255],
		"speedvalue":[255,100,50,0],

		"direction":["run forward","turn left","turn right","run backward","rotate left","rotate right","stop"],
		"noteJ1":["ド2","レ2","ミ2","ファ2","ソ2","ラ2","シ2","ド3","レ3","ミ3","ファ3","ソ3","ラ3","シ3",],
		"noteJ2":["ド4","レ4","ミ4","ファ4","ソ4","ラ4","シ4","ド5","レ5","ミ5","ファ5","ソ5","ラ5","シ5",],
		"noteJ3":["ド6","レ6","ミ6","ファ6","ソ6","ラ6","シ6","ド7","レ7","ミ7","ファ7","ソ7","ラ7","シ7","ド8","レ8"],
		"beats":["Half","Quarter","Eighth","Whole","Double"],
		"digital":["HIGH","LOW"],
		"onoff":["On","Off"],
		"ircode":["POWER","MENU","TEST","RETURN","R0","C","↑","↓","←","→","CENTER","R1","R2","R3","R4","R5","R6","R7","R8","R9","B",],
		"ircodeA":["A CENTER","A↑","A→","A←","A↓",],
	},
	"values":{
		"servo3":0,"servo9":1,"servo10":2,
		"run forward":0,"turn left":1,"turn right":2,"run backward":3,"rotate left":4,"rotate right":5,"stop":6,

		"ド2":65,"レ2":73,"ミ2":82,"ファ2":87,"ソ2":98,"ラ2":110,"シ2":123,
		"ド3":131,"レ3":147,"ミ3":165,"ファ3":175,"ソ3":196,"ラ3":220,"シ3":247,
		"ド4":262,"レ4":294,"ミ4":330,"ファ4":349,"ソ4":392,"ラ4":440,"シ4":494,
		"ド5":523,"レ5":587,"ミ5":659,"ファ5":698,"ソ5":784,"ラ5":880,"シ5":988,
		"ド6":1047,"レ6":1175,"ミ6":1319,"ファ6":1397,"ソ6":1568,"ラ6":1760,"シ6":1976,
		"ド7":2093,"レ7":2349,"ミ7":2637,"ファ7":2794,"ソ7":3136,"ラ7":3520,"シ7":3951,
		"ド8":4186,"レ8":4699,

		"Half":500,"Quarter":250,"Eighth":125,"Whole":1000,"Double":2000,"Zero":0,
		"HIGH":1,"LOW":0,
		"On":1,"Off":0,
		"POWER":0x45,"B":0x46,"MENU":0x47,"TEST":0x44,"RETURN":0x43,"R0":0x16,"C":0x0D,"↑":0x40,"↓":0x19,"←":0x07,"→":0x09,"CENTER":0x15,
		"R1":0x0C,"R2":0x18,"R3":0x5E,"R4":0x08,"R5":0x1C,"R6":0x5A,"R7":0x42,"R8":0x52,"R9":0x4A,
		"A CENTER":0x61,"A↑":0x62,"A→":0x63,"A←":0x64,"A↓":0x65,
	},
	"translators":{
		"ja":{
			"run forward":"前", "turn left":"左", "turn right":"右", "run backward":"後", "rotate left":"左旋回", "rotate right":"右旋回",
			"Half":"2分音符", "Quarter":"4分音符", "Eighth":"8分音符", "Whole":"全音符", "Double":"倍全音符",
			"CENTER":"真ん中", "stop":"ストップ", "On":"オン", "Off":"オフ",

			"set LED %d.onoff"								:"LEDを %d.onoff",
			"play tone on note %d.noteJ1 beat %d.beats"		:"%d.noteJ1 を %d.beats 鳴らす",
			"play tone on note %d.noteJ2 beat %d.beats"		:"%d.noteJ2 を %d.beats 鳴らす",
			"play tone on note %d.noteJ3 beat %d.beats"		:"%d.noteJ3 を %d.beats 鳴らす",
			"read analog A%n ,average %n times,discharge %d.onoff":"アナログ A%n の %n 回平均 放電 %d.onoff",

			"%d.direction at speed %d.speedvalue"			:"%d.direction 向きに %d.speedvalue の速さで動かす",
			"set motor%d.motorPort speed %d.motorvalue"		:"モーター %d.motorPort の速さを %d.motorvalue にする",
			"calibration right %n"							:"右に%n 補正",
			"calibration left %n"							:"左に%n 補正",
			"read calibration"								:"補正データ",
			"set calibration %n"							:"補正データを%n に設定",
			"remote pressed"								:"リモコンボタンが押された",
			"ir remote %d.ircode pressed"					:"押されたのが %d.ircode のボタン",
			"analog remote %d.ircodeA pressed"				:"押されたのがアナログ %d.ircodeA のボタン",
			"get remote X"									:"アナログXの値",
			"get remote Y"									:"アナログYの値",
			"set digital %n output as %d.digital"			:"デジタル %n の出力を %d.digital にする",
			"set digital A%n output as %d.digital"			:"デジタル A%n の出力を %d.digital にする",
			"read digital %n"								:"デジタル %n",
			"read digital A%n"								:"デジタル A%n",
			"set servo %d.servoSlot angle %d.servovalue"	:"サーボ %d.servoSlot の角度を %d.servovalue にする",
		}
	}
}
